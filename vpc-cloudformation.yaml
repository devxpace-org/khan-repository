AWSTemplateFormatVersion: 2010-09-09
Description: Creating vpc with cloudformation 


Resources:
  khanvpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: 10.97.224.0/20
      Tags:
        - Key: Name
          Value: khanvpc

  publicsubnet01:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref khanvpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.97.224.0/22
      Tags: 
        - Key: Name
          Value: publicsubnet01

  publicsubnet02:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref khanvpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.97.228.0/22
      Tags: 
        - Key: Name
          Value: publicsubnet02


  privatesubnet01:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref khanvpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.97.232.0/22
      Tags: 
        - Key: Name
          Value: privatesubnet01


  privatesubnet02:
    Type: AWS::EC2::Subnet
    Properties: 
      VpcId: !Ref khanvpc
      AvailabilityZone: us-east-1a
      CidrBlock: 10.97.236.0/22
      Tags: 
        - Key: Name
          Value: privatesubnet02

## Internet Gateway

  khaninternetgateway:
    Type: AWS::EC2::InternetGateway
    Properties:    
      Tags: 
        - Key: Name
          Value: khan-igw

      
  GatewayToInternet:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref khanvpc
      InternetGatewayId: !Ref khaninternetgateway

## PUBLIC ROUTE TABLE
  publicroutetable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: publicrtb 
      VpcId: !Ref khanvpc

  publicroute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref publicroutetable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref khaninternetgateway

## Public route - subnets association

  publicsubnet01routetableassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref publicsubnet01
      RouteTableId: !Ref publicroutetable
     
  publicsubnet2routetableassociation:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
          SubnetId: !Ref publicsubnet02
          RouteTableId: !Ref publicroutetable    

## NAT GATEWAY

  NatGateway:
    Type: AWS::EC2::NatGateway
    DependsOn: ElasticIP
    Properties: 
      SubnetId: !Ref publicsubnet01
      AllocationId: !GetAtt ElasticIP.AllocationId
      Tags:
        - Key: Name
          Value: khan-natgateway

## ELASTIC IP

  ElasticIP:
    Type: AWS::EC2::EIP
    DependsOn: khanvpc
    Properties:
      Domain: vpc

## PRIVATE ROUTE TABLE

  privateroutetable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: privatertb 
      VpcId: !Ref khanvpc

  privateroute:
    Type: AWS::EC2::Route
    Properties:
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref privateroutetable
      DestinationCidrBlock: 0.0.0.0/0

##  PRIVATE SUBNETS ASSOCIATION TO PRIVATE RTB

  publicsubnet01routetableassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privatesubnet01
      RouteTableId: !Ref privateroutetable

  publicsubnet02routetableassociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref privatesubnet02
      RouteTableId: !Ref privateroutetable
  
### NACL 

  khan-nacl-public:
    Type: AWS::EC2::NetworkAcl
    Properties: 
      Tags: 
        - Key: Name
          Value: Khan-Nacl
      VpcId: !Ref khanvpc

  Inbound-nacl-public:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref khan-nacl-public
      RuleNumber: 100
      Protocol: 6 
      RuleAction: allow
      Egress: “false”
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  outbound-nacl-public:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAclId
      RuleNumber: 100
      Protocol: 6 
      RuleAction: allow
      Egress: “true”
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 80
        To: 80

  NaclAssociation:
    Type: “AWS::EC2::SubnetNetworkAclAssociation”
    Properties:
      SubnetId: !Ref publicsubnet01
      NetworkAclId: !Ref khan-nacl-public
